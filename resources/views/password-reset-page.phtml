<?php

declare(strict_types=1);

namespace Jefferson49\Webtrees\Module\OAuth2Client;

use Fisharebest\Webtrees\Http\RequestHandlers\PasswordResetAction;
use Fisharebest\Webtrees\FlashMessages;
use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Session;
use Fisharebest\Webtrees\Tree;
use Fisharebest\Webtrees\User;
use Jefferson49\Webtrees\Internationalization\MoreI18N;
use Jefferson49\Webtrees\Module\OAuth2Client\Factories\AuthorizationProviderFactory;
use Jefferson49\Webtrees\Module\OAuth2Client\OAuth2Client;

/**
 * @var string    $title
 * @var string    $token
 * @var Tree|null $tree
 * @var User      $user
 */

//Check whether the user is logged in with an OAuth2 provider
$is_oauth2_user = $user->getPreference(OAuth2Client::USER_PREF_PROVIDER_NAME, '') !== '';

if ($is_oauth2_user) {
    $provider_name = Session::get(OAuth2Client::activeModuleName() . 'provider_name', '');

    if ($provider_name === '') {
        FlashMessages::addMessage(I18N::translate('An inconsistency regarding the user credentials was detected: The requested user usually logs in with an authorization provider, but no provider name is available. Please sign out and sign in with valid user credentials.'), 'danger');
        return;
    }
    elseif (!AuthorizationProviderFactory::isValidProvider($provider_name)) {
        FlashMessages::addMessage(I18N::translate('The authorization provider "%s" is not available. Please check the configuration in the following file: data/config.ini.php', $provider_name), 'danger');
        return;
    }

    $provider_label = (new AuthorizationProviderFactory())::make($provider_name, '')->getSignInButtonLabel();
}

?>

<h2 class="wt-page-title">
    <?= $title ?>
</h2>

<?php if ($is_oauth2_user) : ?>
    <div class="h4">
        <?= I18N::translate('The request to reset the passwort belongs to a user, who signs in with %s. The password is managed by the authorization provider (%s) and cannot be changed within webtrees.', $provider_label, $provider_label) ?>	
    </div>
<?php else : ?>
    <form method="post" action="<?= e(route(PasswordResetAction::class, ['token' => $token, 'tree' => $tree instanceof Tree ? $tree->name() : null])) ?>" class="wt-page-options wt-page-options-login">
        <div class="row">
            <label class="col-sm-3 col-form-label wt-page-options-label" for="username">
                <?= MoreI18N::xlate('Username') ?>
            </label>
            <div class="col-sm-9 wt-page-options-value">
                <input class="form-control" type="text" id="username" name="username" value="<?= e($user->userName()) ?>" disabled>
            </div>
        </div>

        <div class="row">
            <label class="col-sm-3 col-form-label wt-page-options-label" for="password">
                <?= MoreI18N::xlate('Password') ?>
            </label>
            <div class="col-sm-9 wt-page-options-value">
                <input class="form-control" type="password" id="password" name="password" autocomplete="new-password" pattern=".{8,}" required="required" data-wt-show-password-text="<?= e(MoreI18N::xlate('show')) ?>" data-wt-show-password-title="<?= e(MoreI18N::xlate('Show password')) ?>" data-wt-hide-password-text="<?= e(MoreI18N::xlate('hide')) ?>" data-wt-hide-password-title="<?= e(MoreI18N::xlate('Hide password')) ?>">
                <div class="form-text" id="password-description">
                    <?= MoreI18N::xlate('Passwords must be at least 8 characters long and are case-sensitive, so that “secret” is different from “SECRET”.') ?>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3 col-form-label wt-page-options-label">
            </div>
            <div class="col-sm-9 wt-page-options-value">
                <button class="btn btn-primary" type="submit">
                    <?= /* I18N: A button label. */
                    MoreI18N::xlate('continue') ?>
                </button>
            </div>
        </div>

        <?= csrf_field() ?>
    </form>
<?php endif ?>