<?php

declare(strict_types=1);

namespace Jefferson49\Webtrees\Module\OAuth2Client;

use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Tree;
use Jefferson49\Webtrees\Module\OAuth2Client\Factories\AuthorizationProviderFactory;
use Jefferson49\Webtrees\Module\OAuth2Client\LoginWithAuthorizationProviderAction;


/**
 * @var Tree|null $tree
 */

$provider_names = AuthorizationProviderFactory::getAuthorizatonProviderNames();

uasort($provider_names, function (string $a, string $b) {
    return strcmp($a, $b);
});

//Remove any provider from list, for which no config is available
foreach($provider_names as $class_name => $provider_name) {
    if(AuthorizationProviderFactory::readProviderOptionsFromConfigFile($provider_name) === []) {
        unset($provider_names[$class_name]);
    }
}

?>

<?php if (sizeof($provider_names) > 0) : ?>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label wt-page-options-label">
            <?= I18N::translate('Sign in with authorization provider') ?>
        </label>
        <div class="col-sm-9 wt-page-options-value">
            <form method="post">
                <?php foreach ($provider_names as $provider_name) : ?>
                    <a href="<?= e(route(LoginWithAuthorizationProviderAction::class, [
                            'tree'          => $tree instanceof Tree ? $tree->name() : null,
                            'provider_name' => $provider_name,
                        ])) ?>" type="submit" class="btn btn-secondary">
                        <?= $provider_name ?>
                    </a>
                <?php endforeach ?>
                <?= csrf_field() ?>
            </form>
        </div>
    </div>        
<?php endif ?>
